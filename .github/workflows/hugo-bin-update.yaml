name: hugo-bin-update-check

permissions:
  contents: write

on:
  schedule:
    - cron: '10 0 * * *'
  workflow_dispatch:

jobs:
  check-and-create-ebuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget jq coreutils

      - name: Process each release
        id: process_releases
        run: |
          ebuild_category=www-apps
          ebuild_name=hugo-bin
          repo_owner=gohugoio
          repo_name=hugo
          ebuild_dir="./${ebuild_category}/${ebuild_name}"
          mkdir -p $ebuild_dir
          releases=$(curl -s https://api.github.com/repos/${repo_owner}/${repo_name}/releases | jq -r '.[].tag_name')
          description="The worldâ€™s fastest framework for building websites."
          PFN="hugo"
          EFN="hugo"
          
          for release in ${releases}; do
            version=${release#v}
            ebuild_file="${ebuild_dir}/hugo-bin-${version}.ebuild"
            if [ ! -f "$ebuild_file" ]; then
              # Create ebuild script
              {
                echo "# Copyright"
                echo "EAPI=8"
                echo "DESCRIPTION=\"$description\""
                echo 'SRC_URI="  '
                echo "  amd64? ( https://github.com/${repo_owner}/${repo_name}/releases/download/v\${PV}/${PFN}_\${PV}_Linux-64bit.tar.gz -> \${P}.amd64.tar.gz )"
                echo "  arm? ( https://github.com/${repo_owner}/${repo_name}/releases/download/v\${PV}/${PFN}_\${PV}_linux-arm.tar.gz -> \${P}.arm.tar.gz )"
                echo "  arm64? ( https://github.com/${repo_owner}/${repo_name}/releases/download/v\${PV}/${PFN}_\${PV}_linux-arm64.tar.gz -> \${P}.arm64.tar.gz )"
                echo '" '
                echo "LICENSE=\"Apache-2.0\""
                echo "SLOT=\"0\""
                echo 'KEYWORDS="~amd64 ~arm ~arm64"'
                echo "DEPEND=\"\""
                echo "RDEPEND=\"\""
                echo "S=\"\${WORKDIR}\""
                echo ""
                echo "src_install() {"
                echo "    mv \${S}/${EFN} ."
                echo "    exeinto /usr/bin"
                echo "    doexe ${EFN}"
                echo "}"
                echo ""
              } > $ebuild_file

              # Generate the manifest for the new ebuild
              wget https://github.com/${repo_owner}/${repo_name}/releases/download/v${version}/${PFN}_${version}_Linux-64bit.tar.gz -O /tmp/${ebuild_name}-${version}.amd64.tar.gz
              wget https://github.com/${repo_owner}/${repo_name}/releases/download/v${version}/${PFN}_${version}_linux-arm.tar.gz -O /tmp/${ebuild_name}-${version}.arm.tar.gz
              wget https://github.com/${repo_owner}/${repo_name}/releases/download/v${version}/${PFN}_${version}_linux-arm64.tar.gz -O /tmp/${ebuild_name}-${version}.arm64.tar.gz
          
              for e in ${ebuild_name}-${version}.amd64.tar.gz ${ebuild_name}-${version}.arm.tar.gz ${ebuild_name}-${version}.arm64.tar.gz; do
                echo "DIST $e $(stat -c %s "/tmp/${e}") BLAKE2B $(b2sum "/tmp/${e}" | cut -d' ' -f1) SHA512 $(sha512sum "/tmp/${e}" | cut -d' ' -f1)" | tee -a "${ebuild_dir}/Manifest"
                rm "/tmp/${e}"
              done
            fi
            break
          done

      - name: Commit and push changes
        run: |
          ebuild_category=www-apps
          ebuild_name=hugo-bin
          ebuild_dir="./${ebuild_category}/${ebuild_name}"
          git add "./${ebuild_dir}"
          git commit -m "Add ebuilds for new ${ebuild_name} releases" && 
          git pull --rebase &&
          git push || true
        if: steps.process_releases.conclusion == 'success'
